#spring.profiles.active=#activatedProperties#
logging.config=classpath:log/log4j2.xml
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:com/gq/data/report/**/dao/mapper/xml/*Mapper.xml
jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
jdbc.url = jdbc:oracle:thin:@localhost:1521:orcl
jdbc.username = c##hadoop
jdbc.password = hadoop
spring.datasource.initialSize=30
spring.datasource.minIdle=30
spring.datasource.maxActive=200
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=180
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
#druid datasouce database settings end


#redis
spring.redis.node=redis://10.100.200.227:26379,redis://10.100.200.227:26380,redis://10.100.200.227:26381
spring.redis.isRealServer=true
spring.redis.masterName=p2ptest200227
spring.redis.node1=10.100.200.227:26379
spring.redis.node2=10.100.200.227:26380
spring.redis.node3=10.100.200.227:26381
# 连接超时时间（毫秒）
spring.redis.timeout=0
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=10.100.200.227:6379
# Redis服务器连接端口
spring.redis.port=16380
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#报送数据redis
zxxm.pushtype=pushtype

logging.level.com.gq.data.report = info